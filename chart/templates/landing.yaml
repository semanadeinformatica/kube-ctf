
apiVersion: apps/v1
kind: Deployment
metadata:
  name: landing
  namespace: {{ .Release.Name }}-challenges
  labels:
    role: landing
spec:
  replicas: {{ (index  .Values "landing").replicas }}
  selector:
    matchLabels:
      role: landing
  template:
    metadata:
      labels:
        role: landing
    spec:
      enableServiceLinks: false
      automountServiceAccountToken: false
      containers:
      - name: web
        image: {{ (index  .Values "image-registry-prefix") }}landing
{{- if eq (index  .Values "deployment-environment") "development" }}
        imagePullPolicy: IfNotPresent
{{- else }}
        imagePullPolicy: Always
{{- end}}
        resources:
{{ toYaml (index  .Values "landing").quota | indent 10 }}
        ports:
        - containerPort: 80
{{- if (index .Values "image-registry-credentials") }}
      imagePullSecrets:
      - name: image-registry-credentials
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: landing
  namespace: {{ .Release.Name }}-challenges
  labels:
    role: landing
spec:
  selector:
    role: landing
  ports:
    - port: 80
---
# default ingressroute
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: landing-websecure
  namespace: {{ .Release.Name }}-challenges
spec:
  entryPoints:
    - websecure
{{- if eq (index  .Values "deployment-environment") "production" }}
  tls:
    secretName: {{ .Release.Name }}-cert-challenges
{{- end }}
  routes:
    - match: HostRegexp(`{{ .Values.domain.challenges }}`, `{subdomain:[\w-]+}.{{ .Values.domain.challenges }}`)
      kind: Rule
      priority: 5
      middlewares:
      - name: hsts
      services:
      - name: landing
        port: 80
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: http2https
  namespace: {{ .Release.Name }}-challenges
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: landing-web
  namespace: {{ .Release.Name }}-challenges
spec:
  entryPoints:
    - web
  routes:
    - match: HostRegexp(`{{ .Values.domain.challenges }}`, `{subdomain:[\w-]+}.{{ .Values.domain.challenges }}`)
      kind: Rule
      priority: 5
      services:
      - name: noop@internal
        kind: TraefikService
      middlewares:
      - name: http2https